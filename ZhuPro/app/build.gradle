apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
apply plugin: 'com.jakewharton.butterknife'

apply plugin: 'com.alibaba.arouter'


def cfg = rootProject.ext.configuration // 配置
android {
    compileSdkVersion cfg.compileVersion
    defaultConfig {
        applicationId cfg.package
        minSdkVersion cfg.minSdk
        targetSdkVersion cfg.targetSdk
        versionCode cfg.version_code
        versionName cfg.version_name
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true } }

        multiDexEnabled true

        packagingOptions {
            exclude 'META-INF/rxjava.properties'
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName(), "room.schemaLocation":"$projectDir/schemas".toString(),
                                                                     "room.incremental":"true",
                                                                     "room.expandProjection":"true"]
            }
        }

        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'x86',"armeabi-v7a"
        }


    }

    signingConfigs {
        release {
            keyAlias 'key0'
            keyPassword 'zhu123456789'
            storePassword 'zhu123456789'
            storeFile file('../keystore/zjt.jks')
            v1SigningEnabled true
            v2SigningEnabled true
        }
        debug {
            keyAlias 'key0'
            keyPassword 'zhu123456789'
            storePassword 'zhu123456789'
            storeFile file('../keystore/zjt.jks')
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    //多渠道
    flavorDimensions "default"
    productFlavors {
        flavor_default {
            //默认版本，完全继承defaultConfig中的配置
            dimension "default"
            manifestPlaceholders = [
                    APP_PLATFORM: "ZJT_MAIN"
            ]
        }

        flavor_zjt {
            //渠道包,覆盖了applicationId、添加了versionName后缀
            dimension "default"
            applicationId "com.zjt.test"
            versionCode 2
            versionName "1.1.1"
            manifestPlaceholders = [
                    APP_PLATFORM: "ZJT_TEST"
            ]
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    implementation 'com.andkulikov:transitionseverywhere:1.6.9'
    implementation project(':wheelLibrary')
    implementation project(':citypicker')
//    implementation project(':base')
    //butterknife
    implementation 'com.jakewharton:butterknife:9.0.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:9.0.0'
    //album
    implementation 'com.yanzhenjie:album:2.0.1'
    implementation 'com.labo.kaji:relativepopupwindow:0.3.1'
    implementation('com.alibaba.android:vlayout:1.2.8@aar') {
        transitive = true
    }
    implementation 'com.google.code.gson:gson:2.6.2'
    implementation 'com.alibaba:fastjson:1.1.70.android'
    //retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.1.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.1.0'
    //okhttp 以及在retrofit中使用rxjava要导入的库
    implementation 'com.squareup.okhttp3:okhttp:3.8.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.0'
    implementation 'io.reactivex:rxandroid:1.1.0'
    implementation files('libs/pushservice-6.5.0.75.jar')
    //阿里云推送
    implementation 'com.aliyun.ams:alicloud-android-push:3.1.4'
    //添加ARouter 路由
    implementation 'com.alibaba:arouter-api:1.4.1'
    annotationProcessor 'com.alibaba:arouter-compiler:1.2.2'
    //下拉刷新和上拉加载更多
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-andx-5'
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0-andx-5'
    //引入dagger2
    implementation 'com.google.dagger:dagger:2.4'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.4'
    implementation 'com.jungly:gridPasswordView:0.3'
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.0.0'
    api 'com.aliyun.ams:alicloud-android-utils:1.1.3'
    implementation 'com.android.support:multidex:1.0.3' //多 dex 配置 bugly热修复
    annotationProcessor project(':annotation_processor')
    implementation project(':annotation_my')
    //DiskLruCache
    api 'com.jakewharton:disklrucache:2.0.2'
    //阿里云推送的辅助通道
    implementation(name: 'alicloud-android-third-push-3.0.6', ext: 'aar')
    //    implementation 'com.aliyun.ams:alicloud-android-third-push:3.0.6@aar'
    implementation 'com.google.firebase:firebase-messaging:9.6.1'
    implementation 'com.github.bumptech.glide:glide:4.4.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.4.0'
    implementation 'com.jack.frdialog:FRDialog:1.0.3'
    //google room database
    def room_version = "2.2.0-alpha02"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    //leakCanary
    implementation 'com.squareup.leakcanary:leakcanary-android:1.5.1'
    //腾讯音视频
    implementation(name: 'LiteAVSDK_TRTC_6.7.7754', ext: 'aar')
    implementation 'com.ethanhua:skeleton:1.1.2'
    implementation 'io.supercharge:shimmerlayout:2.1.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation files('libs/joda-time-2.3.jar')

    implementation project(':token_auto_complete')

    //文件下载
    implementation 'com.liulishuo.filedownloader:library:1.7.7'
    // kotlin 协程
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.5'

    implementation "com.github.chrisbanes:PhotoView:2.1.3"

    // 用来保存数据到本地，效率和稳定性都比 SharePreference好
    implementation 'com.tencent:mmkv-static:1.2.2'

}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

repositories {
    mavenCentral()

}